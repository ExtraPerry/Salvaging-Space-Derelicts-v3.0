#BlueJ class context
comment0.target=Inventory
comment0.text=\r\n\ [Inventory\ Class].\r\n\ This\ class\ defines\ what\ an\ inventory\ is\ inside\ of\ the\ game.\ Each\ object\ created\ from\ this\ class\ will\ be\ its\ own\ individual\ existance.\r\n\ This\ class\ should\ be\ implemented\ as\ an\ attribute\ inside\ of\ another\ class\ that\ would\ require\ an\ inventory\ in\ which\ it\ can\ store\ items.\r\n\r\n\ @author\ Gervais\ Pierre\r\n\ @version\ v3.0\r\n
comment1.params=pMaxVolume
comment1.target=Inventory(int)
comment1.text=\r\n\ Constructor\ used\ to\ create\ an\ instance\ (object)\ of\ an\ inventory.\r\n\ @param\ int\ MaxVolume\ \:\ Volume\ limit\ for\ the\ inventory.\r\n
comment10.params=pItem
comment10.target=boolean\ hasEnoughSpace(Item)
comment10.text=\r\n\ Used\ to\ check\ if\ an\ item\ can\ fit\ inside\ the\ inventory.\r\n\ @return\ boolean\ \:\ True\ if\ the\ item\ can\ fit\ inside\ the\ inventory.\ False\ if\ the\ item\ cannot\ fit\ inside\ the\ inventory.\r\n
comment11.params=pItem
comment11.target=void\ addItem(Item)
comment11.text=\r\n\ Used\ to\ add\ an\ item\ to\ the\ inventory.\ (Note\ \:\ will\ also\ update\ total\ price\ and\ volume).\r\n\ @param\ Item\ Item\ \:\ Item\ that\ should\ be\ added\ to\ the\ inventory.\r\n\ @throw\ InventorySizeExceededException\ \:\ Thrown\ if\ item\ cannot\ fit\ inside\ the\ inventory.\r\n
comment12.params=pItem
comment12.target=void\ removeItem(Item)
comment12.text=\r\n\ Used\ to\ remove\ an\ item\ from\ the\ inventory.\ (Note\ \:\ will\ also\ update\ total\ price\ and\ volume).\r\n\ @param\ Item\ Item\ \:\ Item\ that\ should\ be\ removed\ from\ the\ inventory.\r\n\ @throw\ InventoryItemDoesNotExistException\ \:\ Thrown\ if\ item\ does\ not\ exist\ inside\ inventory\ and\ thus\ cannot\ be\ removed.\r\n
comment13.params=
comment13.target=java.lang.String\ getInventoryItemList()
comment13.text=\r\n\ Used\ to\ give\ a\ list\ of\ all\ items\ inside\ of\ the\ inventory.\r\n\ @return\ String\ ItemList\ \:\ A\ list\ in\ the\ form\ of\ a\ string\ listing\ all\ items\ inside\ the\ inventory\ as\ well\ as\ their\ price\ and\ volume.\r\n
comment14.params=
comment14.target=java.lang.String\ toString()
comment14.text=\r\n\ Used\ to\ produce\ a\ String\ in\ which\ all\ information\ of\ the\ inventory\ will\ be\ displayed\ on.\r\n\ @return\ String\ LongDescription\ \:\ A\ peice\ of\ text\ used\ to\ describe\ all\ aspects\ of\ the\ inventory.\ This\ will\ include\ its\ Total\ Price,\ Total\ Volume\ and\ list\ of\ all\ items\ currently\ stored\ inside\ of\ it.\r\n
comment2.params=pTotalPrice
comment2.target=void\ setTotalPrice(int)
comment2.text=\r\n\ Private\ functions\ used\ to\ change\ the\ inventory's\ total\ price.\r\n\ @param\ int\ TotalPrice\ \:\ Total\ price\ of\ all\ current\ items\ being\ stored\ inside\ of\ the\ inventory.\r\n
comment3.params=pTotalVolume
comment3.target=void\ setTotalVolume(int)
comment3.text=\r\n\ Private\ functions\ used\ to\ change\ the\ inventory's\ total\ price.\r\n\ @param\ int\ TotalVolume\ \:\ Total\ space\ of\ all\ current\ items\ being\ stored\ inside\ of\ the\ inventory.\r\n
comment4.params=pMaxVolume
comment4.target=void\ setMaxVolume(int)
comment4.text=\r\n\ Private\ functions\ used\ to\ change\ the\ inventory's\ max\ volume.\r\n\ @param\ int\ MaxVolume\ \:\ Volume\ limit\ for\ the\ inventory.\r\n
comment5.params=pItemName
comment5.target=Item\ getItem(java.lang.String)
comment5.text=\r\n\ Fetches\ an\ item\ that\ is\ stored\ inside\ of\ the\ inventory.\ (Note\ if\ there\ is\ no\ matching\ item\ it'll\ return\ a\ null\ value).\r\n\ @param\ String\ ItemName\ \:\ The\ name\ of\ the\ item\ that\ you\ are\ looking\ for\ inside\ of\ the\ inventory.\r\n\ @return\ Item\ Item\ ||\ null\ \:\ The\ item\ object\ that\ you\ are\ looking\ for\ that\ had\ a\ matching\ name\ with\ the\ inserted\ parameter.\ Will\ return\ null\ if\ no\ match\ is\ found.\r\n
comment6.params=
comment6.target=int\ getTotalPrice()
comment6.text=\r\n\ Fetches\ the\ total\ price\ of\ all\ items\ currently\ stored\ inside\ of\ the\ inventory.\r\n\ @return\ Int\ TotalPrice\ \:\ Total\ price\ of\ all\ items\ stored\ inside\ the\ inventory.\r\n
comment7.params=
comment7.target=int\ getTotalVolume()
comment7.text=\r\n\ Fetches\ the\ total\ volume\ of\ all\ items\ currently\ stored\ inside\ of\ the\ inventory.\r\n\ @return\ Int\ TotalVolume\ \:\ Total\ volume\ of\ all\ items\ stored\ inside\ the\ inventory.\r\n
comment8.params=
comment8.target=int\ getMaxVolume()
comment8.text=\r\n\ Fetches\ the\ max\ volume\ of\ all\ items\ currently\ stored\ inside\ of\ the\ inventory.\r\n\ @return\ Int\ MaxVolume\ \:\ Volume\ limit\ of\ the\ inventory.\r\n
comment9.params=pItemName
comment9.target=boolean\ hasItem(java.lang.String)
comment9.text=\r\n\ Used\ to\ check\ if\ an\ item\ is\ inside\ the\ inventory\ by\ name.\r\n\ @return\ boolean\ \:\ True\ if\ the\ item\ is\ inside\ of\ the\ inventory.\ False\ if\ the\ item\ is\ not\ inside\ of\ the\ inventory.\r\n
numComments=15
