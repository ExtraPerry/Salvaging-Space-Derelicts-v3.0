#BlueJ class context
comment0.target=Room
comment0.text=\r\n\ [Room\ Class].\r\n\ This\ class\ defines\ what\ a\ room\ is\ inside\ of\ the\ game.\ Each\ object\ created\ from\ this\ class\ will\ be\ its\ own\ individual\ existance.\r\n\ However\ two\ rooms\ with\ the\ same\ name\ should\ not\ be\ created\ for\ it\ could\ cause\ some\ complications,\ since\ the\ names\ will\ be\ used\ by\ the\ player\ to\ distinguish\ each\ room.\r\n\r\n\ @author\ Gervais\ Pierre\r\n\ @version\ v3.0\r\n
comment1.params=pName\ pRoomInventoryMaxVolume\ pImageURL
comment1.target=Room(java.lang.String,\ int,\ java.lang.String)
comment1.text=\r\n\ Constructor\ used\ to\ create\ an\ instance\ (object)\ of\ a\ room.\r\n\ @param\ String\ Name\ \:\ The\ name\ by\ which\ the\ user\ will\ distinguish\ the\ room.\r\n\ @param\ int\ RoomInventoryMaxVolume\ \:\ The\ maximum\ limit\ in\ volume\ that\ the\ room's\ inventory\ can\ hold.\r\n\ @param\ String\ ImageURL\ \:\ The\ URL\ link\ associated\ to\ the\ room\ that\ will\ be\ displayed\ to\ the\ user.\r\n
comment2.params=pDirection\ pRoom
comment2.target=void\ setExit(java.lang.String,\ Room)
comment2.text=\r\n\ Used\ after\ creating\ all\ the\ rooms\ in\ order\ to\ assign\ room\ to\ room\ connections.\r\n\ @param\ String\ Direction\ \:\ Defines\ the\ direction\ of\ the\ exit.\ (Note\ \:\ using\ an\ already\ existing\ direction\ "should"\ overwrite\ the\ previous\ one).\r\n\ @param\ Room\ Room\ \:\ The\ room\ the\ exit\ will\ connect\ to.\r\n
comment3.params=
comment3.target=java.lang.String\ getName()
comment3.text=\r\n\ Fetches\ the\ name\ of\ the\ room.\r\n\ @return\ String\ Name\ \:\ The\ name\ of\ the\ room\ in\ question.\r\n
comment4.params=
comment4.target=java.util.HashMap\ getExits()
comment4.text=\r\n\ Fetches\ the\ HashMap\ (keyed\ list)\ of\ all\ exits\ that\ the\ room\ has.\r\n\ @return\ HashMap\ Exits\ \:\ Keyed\ list\ of\ all\ exits\ that\ the\ room\ has.\r\n
comment5.params=pDirection
comment5.target=Room\ getExit(java.lang.String)
comment5.text=\r\n\ Fetches\ a\ specific\ exit\ based\ on\ the\ direction.\ (Note\ will\ return\ null\ if\ the\ direction\ does\ not\ exist).\r\n\ @param\ String\ Direction\ \:\ The\ key\ used\ to\ fetch\ a\ specific\ exit\ in\ the\ list.\r\n\ @return\ Room\ ExitRoom\ \:\ The\ room\ in\ which\ the\ specified\ exit\ will\ lead\ to.\r\n
comment6.params=
comment6.target=Inventory\ getInventory()
comment6.text=\r\n\ Fetches\ the\ room's\ inventory.\r\n\ @return\ Inventory\ RoomInventory\ \:\ The\ room's\ inventory.\r\n
comment7.params=
comment7.target=java.lang.String\ getImageURL()
comment7.text=\r\n\ Fetches\ the\ room's\ associated\ image\ URL\ link.\r\n\ @return\ String\ ImageURL\ \:\ The\ rooms\ URL\ link\ to\ it's\ associated\ image.\r\n
numComments=8
